
var common = require('./common');
var assert = require('assert');
var events = require('../');
var e = new events.EventEmitter();

var hasDefineProperty = !!Object.defineProperty;
try { Object.defineProperty({}, 'x', { value: 0 }); } catch (err) { hasDefineProperty = false }

e.on('maxListeners', common.mustCall());

e.setMaxListeners(42);

var throwsObjs = [NaN, -1, 'and even this'];
var maxError = /^RangeError: The value of "n" is out of range\. It must be a non-negative number\./;
var defError = /^RangeError: The value of "defaultMaxListeners" is out of range\. It must be a non-negative number\./;

for (var i = 0; i < throwsObjs.length; i++) {
  var obj = throwsObjs[i];
  assert.throws(function() { e.setMaxListeners(obj); }, maxError);
  if (hasDefineProperty) {
    assert.throws(function() { events.defaultMaxListeners = obj; }, defError);
  }
}

e.emit('maxListeners');
